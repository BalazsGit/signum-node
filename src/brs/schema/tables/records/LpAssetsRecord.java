/*
 * This file is generated by jOOQ.
 */
package brs.schema.tables.records;


import brs.schema.tables.LpAssets;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LpAssetsRecord extends UpdatableRecordImpl<LpAssetsRecord> implements Record6<Long, Long, Long, Integer, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB.lp_assets.db_id</code>.
     */
    public void setDbId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB.lp_assets.db_id</code>.
     */
    public Long getDbId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB.lp_assets.lp_id</code>.
     */
    public void setLpId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB.lp_assets.lp_id</code>.
     */
    public Long getLpId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>DB.lp_assets.asset_id</code>.
     */
    public void setAssetId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB.lp_assets.asset_id</code>.
     */
    public Long getAssetId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>DB.lp_assets.factor</code>.
     */
    public void setFactor(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB.lp_assets.factor</code>.
     */
    public Integer getFactor() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>DB.lp_assets.height</code>.
     */
    public void setHeight(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB.lp_assets.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB.lp_assets.latest</code>.
     */
    public void setLatest(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB.lp_assets.latest</code>.
     */
    public Boolean getLatest() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Long, Long, Integer, Integer, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Long, Long, Integer, Integer, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return LpAssets.LP_ASSETS.DB_ID;
    }

    @Override
    public Field<Long> field2() {
        return LpAssets.LP_ASSETS.LP_ID;
    }

    @Override
    public Field<Long> field3() {
        return LpAssets.LP_ASSETS.ASSET_ID;
    }

    @Override
    public Field<Integer> field4() {
        return LpAssets.LP_ASSETS.FACTOR;
    }

    @Override
    public Field<Integer> field5() {
        return LpAssets.LP_ASSETS.HEIGHT;
    }

    @Override
    public Field<Boolean> field6() {
        return LpAssets.LP_ASSETS.LATEST;
    }

    @Override
    public Long component1() {
        return getDbId();
    }

    @Override
    public Long component2() {
        return getLpId();
    }

    @Override
    public Long component3() {
        return getAssetId();
    }

    @Override
    public Integer component4() {
        return getFactor();
    }

    @Override
    public Integer component5() {
        return getHeight();
    }

    @Override
    public Boolean component6() {
        return getLatest();
    }

    @Override
    public Long value1() {
        return getDbId();
    }

    @Override
    public Long value2() {
        return getLpId();
    }

    @Override
    public Long value3() {
        return getAssetId();
    }

    @Override
    public Integer value4() {
        return getFactor();
    }

    @Override
    public Integer value5() {
        return getHeight();
    }

    @Override
    public Boolean value6() {
        return getLatest();
    }

    @Override
    public LpAssetsRecord value1(Long value) {
        setDbId(value);
        return this;
    }

    @Override
    public LpAssetsRecord value2(Long value) {
        setLpId(value);
        return this;
    }

    @Override
    public LpAssetsRecord value3(Long value) {
        setAssetId(value);
        return this;
    }

    @Override
    public LpAssetsRecord value4(Integer value) {
        setFactor(value);
        return this;
    }

    @Override
    public LpAssetsRecord value5(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public LpAssetsRecord value6(Boolean value) {
        setLatest(value);
        return this;
    }

    @Override
    public LpAssetsRecord values(Long value1, Long value2, Long value3, Integer value4, Integer value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LpAssetsRecord
     */
    public LpAssetsRecord() {
        super(LpAssets.LP_ASSETS);
    }

    /**
     * Create a detached, initialised LpAssetsRecord
     */
    public LpAssetsRecord(Long dbId, Long lpId, Long assetId, Integer factor, Integer height, Boolean latest) {
        super(LpAssets.LP_ASSETS);

        setDbId(dbId);
        setLpId(lpId);
        setAssetId(assetId);
        setFactor(factor);
        setHeight(height);
        setLatest(latest);
    }
}
