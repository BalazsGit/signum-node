/*
 * This file is generated by jOOQ.
 */
package brs.schema.tables.records;


import brs.schema.tables.Lp;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LpRecord extends UpdatableRecordImpl<LpRecord> implements Record9<Long, Byte, Long, String, Integer, Integer, Long, Integer, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>DB.lp.db_id</code>.
     */
    public void setDbId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>DB.lp.db_id</code>.
     */
    public Long getDbId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>DB.lp.version</code>.
     */
    public void setVersion(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>DB.lp.version</code>.
     */
    public Byte getVersion() {
        return (Byte) get(1);
    }

    /**
     * Setter for <code>DB.lp.lp_id</code>.
     */
    public void setLpId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>DB.lp.lp_id</code>.
     */
    public Long getLpId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>DB.lp.name</code>.
     */
    public void setName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>DB.lp.name</code>.
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>DB.lp.swap_fee</code>.
     */
    public void setSwapFee(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>DB.lp.swap_fee</code>.
     */
    public Integer getSwapFee() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>DB.lp.platform_fee</code>.
     */
    public void setPlatformFee(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>DB.lp.platform_fee</code>.
     */
    public Integer getPlatformFee() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>DB.lp.platform_account_id</code>.
     */
    public void setPlatformAccountId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>DB.lp.platform_account_id</code>.
     */
    public Long getPlatformAccountId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>DB.lp.height</code>.
     */
    public void setHeight(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>DB.lp.height</code>.
     */
    public Integer getHeight() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>DB.lp.latest</code>.
     */
    public void setLatest(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>DB.lp.latest</code>.
     */
    public Boolean getLatest() {
        return (Boolean) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Byte, Long, String, Integer, Integer, Long, Integer, Boolean> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Byte, Long, String, Integer, Integer, Long, Integer, Boolean> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Lp.LP.DB_ID;
    }

    @Override
    public Field<Byte> field2() {
        return Lp.LP.VERSION;
    }

    @Override
    public Field<Long> field3() {
        return Lp.LP.LP_ID;
    }

    @Override
    public Field<String> field4() {
        return Lp.LP.NAME;
    }

    @Override
    public Field<Integer> field5() {
        return Lp.LP.SWAP_FEE;
    }

    @Override
    public Field<Integer> field6() {
        return Lp.LP.PLATFORM_FEE;
    }

    @Override
    public Field<Long> field7() {
        return Lp.LP.PLATFORM_ACCOUNT_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Lp.LP.HEIGHT;
    }

    @Override
    public Field<Boolean> field9() {
        return Lp.LP.LATEST;
    }

    @Override
    public Long component1() {
        return getDbId();
    }

    @Override
    public Byte component2() {
        return getVersion();
    }

    @Override
    public Long component3() {
        return getLpId();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public Integer component5() {
        return getSwapFee();
    }

    @Override
    public Integer component6() {
        return getPlatformFee();
    }

    @Override
    public Long component7() {
        return getPlatformAccountId();
    }

    @Override
    public Integer component8() {
        return getHeight();
    }

    @Override
    public Boolean component9() {
        return getLatest();
    }

    @Override
    public Long value1() {
        return getDbId();
    }

    @Override
    public Byte value2() {
        return getVersion();
    }

    @Override
    public Long value3() {
        return getLpId();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public Integer value5() {
        return getSwapFee();
    }

    @Override
    public Integer value6() {
        return getPlatformFee();
    }

    @Override
    public Long value7() {
        return getPlatformAccountId();
    }

    @Override
    public Integer value8() {
        return getHeight();
    }

    @Override
    public Boolean value9() {
        return getLatest();
    }

    @Override
    public LpRecord value1(Long value) {
        setDbId(value);
        return this;
    }

    @Override
    public LpRecord value2(Byte value) {
        setVersion(value);
        return this;
    }

    @Override
    public LpRecord value3(Long value) {
        setLpId(value);
        return this;
    }

    @Override
    public LpRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public LpRecord value5(Integer value) {
        setSwapFee(value);
        return this;
    }

    @Override
    public LpRecord value6(Integer value) {
        setPlatformFee(value);
        return this;
    }

    @Override
    public LpRecord value7(Long value) {
        setPlatformAccountId(value);
        return this;
    }

    @Override
    public LpRecord value8(Integer value) {
        setHeight(value);
        return this;
    }

    @Override
    public LpRecord value9(Boolean value) {
        setLatest(value);
        return this;
    }

    @Override
    public LpRecord values(Long value1, Byte value2, Long value3, String value4, Integer value5, Integer value6, Long value7, Integer value8, Boolean value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LpRecord
     */
    public LpRecord() {
        super(Lp.LP);
    }

    /**
     * Create a detached, initialised LpRecord
     */
    public LpRecord(Long dbId, Byte version, Long lpId, String name, Integer swapFee, Integer platformFee, Long platformAccountId, Integer height, Boolean latest) {
        super(Lp.LP);

        setDbId(dbId);
        setVersion(version);
        setLpId(lpId);
        setName(name);
        setSwapFee(swapFee);
        setPlatformFee(platformFee);
        setPlatformAccountId(platformAccountId);
        setHeight(height);
        setLatest(latest);
    }
}
